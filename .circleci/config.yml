version: 2.1

orbs:
  win: circleci/windows@2.2.0

install_openjdk8: &install_openjdk8
  name: Install OpenJDK8
  command: |
    if [ "${PLATFORM}" == "linux" ]; then
      sudo apt-get update && sudo apt-get install openjdk-8-jdk
      sudo update-java-alternatives -s java-1.8.0-openjdk-amd64
    elif [ "${PLATFORM}" == "macos" ]; then
      brew cask install adoptopenjdk8
    fi
    java -version

install_android_sdk: &install_android_sdk
  name: Install Android SDK
  command: |
    sdk_os="linux"
    if [ "${PLATFORM}" == "macos" ]; then
      sdk_os="darwin"
    fi
    sdk_zip_filename="sdk-tools-${sdk_os}-4333796.zip"
    mkdir -p "${ANDROID_SDK}"
    cd "${ANDROID_SDK}"
    curl -O "https://dl.google.com/android/repository/${sdk_zip_filename}"
    unzip "${sdk_zip_filename}"
    export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
    echo 'y' |sdkmanager --install tools
    echo 'y' |sdkmanager --install platform-tools
    echo 'y' |sdkmanager --install "build-tools;28.0.0"
    echo 'y' |sdkmanager --install "platforms;android-23"

    # Install 32 bit libraries
    # https://stackoverflow.com/questions/36911709/cannot-run-program-aapt
    # Needed to run Android build-tools
    if [ "${PLATFORM}" == "linux" ]; then
      sudo apt-get install gcc-multilib lib32z1 lib32stdc++6
    fi

install_golang: &install_golang
  name: Install GoLang 1.10.1
  command: |
    golang_versin="1.10.1"
    golang_os="linux"
    if [ "${PLATFORM}" == "macos" ]; then
      golang_os="darwin"
    fi
    golang_binary_filename="go${golang_versin}.${golang_os}-amd64.tar.gz"
    cd ~
    curl -O "https://storage.googleapis.com/golang/${golang_binary_filename}"
    sudo tar -xzf "${golang_binary_filename}" -C /usr/local
    rm "${golang_binary_filename}"
    export PATH="${PATH}:/usr/local/go/bin"
    go version

install_python: &install_python
  name: Install Python 3.6.2
  command: |
    if [ "${PLATFORM}" == "macos" ]; then
      brew install pyenv
    fi
    pyenv install -s 3.6.2
    pyenv global 3.6.2 system
    export PATH="$(pyenv root)/shims:${PATH}"
    python --version

install_groovy: &install_groovy
  name: Install Groovy
  command: |
    curl -s get.sdkman.io | bash
    source "$HOME/.sdkman/bin/sdkman-init.sh"
    sdk install groovy 2.4.18
    groovy -version

install_ghc: &install_ghc
  name: Install Ghc
  command: |
    if [ "${PLATFORM}" == "macos" ]; then
      brew install ghc
    else
      sudo apt-get update
      sudo apt-get install ghc
      sudo apt-get install -y ghc-dynamic
      sudo apt-get install -y ghc-haddock
    fi
    ghc --version

run_ant_build: &run_ant_build
  name: Run Ant Build
  command: |
    if [ "${PLATFORM}" == "macos" ]; then
      # The latest ant depends on JDK13, install 1.9 instead.
      brew install ant@1.9
      export PATH="/usr/local/opt/ant@1.9/bin:${PATH}"
    fi
    cd "${BUCKROOT}"
    set -ex
    export ANT_OPTS='-Xmx1000m'
    ant

run_buck_build: &run_buck_build
  name: Run Buck Build
  command: |
    cd "${BUCKROOT}"
    echo '-Xmx1024m' > .buckjavaargs.local
    export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
    export PATH="$(pyenv root)/shims:${PATH}"
    set -ex
    ./bin/buck build buck --out "${BUCK_PEX_LOCATION}" || { cat "buck-out/log/buck-0.log"; exit 1; }

linux_environment: &linux_environment
  # Use string constant for values, no environment variables 
  PLATFORM: "linux"
  BUCKROOT: "/home/circleci/buck"
  ANDROID_SDK: "/home/circleci/android-sdk"
  TERM: "dumb"
  BUCK_NUM_THREADS: 3
  BUCK_PEX_LOCATION: "./new_buck.pex"

macos_environment: &macos_environment
  PLATFORM: "macos"
  BUCKROOT: "/Users/distiller/buck"
  ANDROID_SDK: "/Users/distiller/android-sdk"
  TERM: "dumb"
  BUCK_NUM_THREADS: 3
  BUCK_PEX_LOCATION: "./new_buck.pex"

windows_environment: &windows_environment
  PLATFORM: "windows"
  BUCKROOT: "C:\\Users\\circleci\\buck"
  ANDROID_SDK: "C:\\Users\\circleci\\android-sdk"
  TERM: "dumb"
  BUCK_NUM_THREADS: 3
  BUCK_PEX_LOCATION: "./new_buck.pex"

jobs:
  linux_build_openjdk8:
    environment:
      <<: *linux_environment
    working_directory: "/home/circleci/buck"
    machine:
      # linux VM
      image: ubuntu-1604:201903-01
    steps:
      # Steps run sequentially in separate shells
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Build Tests
          command: |
            cd "${BUCKROOT}"
            export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
            export PATH="$(pyenv root)/shims:${PATH}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=${BUCK_NUM_THREADS} src/... test/...

  linux_unit_groovy:
    environment:
      <<: *linux_environment
    working_directory: "/home/circleci/buck"
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          <<: *install_groovy
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Unit Tests
          command: |
            cd "${BUCKROOT}"
            export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
            export PATH="$(pyenv root)/shims:${PATH}"
            export GROOVY_HOME="$HOME/.sdkman/candidates/groovy/current"
            set -eux
            ${BUCK_PEX_LOCATION} test --num-threads=${BUCK_NUM_THREADS} --all --test-selectors '!.*[Ii]ntegration.*'
          no_output_timeout: 20m

  linux_build_ant:
    environment:
      <<: *linux_environment
    working_directory: "/home/circleci/buck"
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Ant Tests
          command: |
            cd "${BUCKROOT}"
            export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
            export ANDROID_HOME="${ANDROID_SDK}"
            set -eux
            ant circleci
            ./scripts/circleci_test_java_file_format

  linux_test_integration:
    environment:
      <<: *linux_environment
    working_directory: "/home/circleci/buck"
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          <<: *install_ghc
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *install_groovy
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Integration Tests
          command: |
            cd "${BUCKROOT}"
            export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
            export PATH="$(pyenv root)/shims:${PATH}"
            export GROOVY_HOME="$HOME/.sdkman/candidates/groovy/current"
            set -eux
            ${BUCK_PEX_LOCATION} test --num-threads=$BUCK_NUM_THREADS --all --filter '^(?!(com.facebook.buck.android|com.facebook.buck.jvm.java)).*[Ii]ntegration.*'

  linux_test_heavy_integration:
    environment:
      <<: *linux_environment
    working_directory: "/home/circleci/buck"
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          name: Install Android NDK
          command: |
            cd "${BUCKROOT}"
            export NDK_HOME="${HOME}/android-ndk-linux"
            ./scripts/circleci_install_android_ndk.sh
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Heavy Integration Tests
          command: |
            export NDK_HOME="${HOME}/android-ndk-linux"
            export ANDROID_HOME="${ANDROID_SDK}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=$BUCK_NUM_THREADS //test/com/facebook/buck/android/... //test/com/facebook/buck/jvm/java/...
            ${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... //test/com/facebook/buck/jvm/java/... --filter '.*[Ii]ntegration.*'

  linux_test_android_ndk_15:
    environment:
      <<: *linux_environment
    working_directory: "/home/circleci/buck"
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          name: Install Android NDK 15
          command: |
            cd "${BUCKROOT}"
            export NDK_HOME="${HOME}/android-ndk-linux"
            ./scripts/circleci_unzip_android_ndk.sh android-ndk-r15c
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Android NDK 15 Tests
          command: |
            export NDK_HOME="${HOME}/android-ndk-linux"
            export ANDROID_HOME="${ANDROID_SDK}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=$BUCK_NUM_THREADS //test/com/facebook/buck/android/...
            ${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... --filter '.*[Ii]ntegration.*'

  linux_test_android_ndk_16:
    environment:
      <<: *linux_environment
    working_directory: "/home/circleci/buck"
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          name: Install Android NDK 16
          command: |
            cd "${BUCKROOT}"
            export NDK_HOME="${HOME}/android-ndk-linux"
            ./scripts/circleci_unzip_android_ndk.sh android-ndk-r16b
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Android NDK 16 Tests
          command: |
            export NDK_HOME="${HOME}/android-ndk-linux"
            export ANDROID_HOME="${ANDROID_SDK}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=$BUCK_NUM_THREADS //test/com/facebook/buck/android/...
            ${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... --filter '.*[Ii]ntegration.*'

  linux_test_android_ndk_17:
    environment:
      <<: *linux_environment
    working_directory: "/home/circleci/buck"
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          name: Install Android NDK 17
          command: |
            cd "${BUCKROOT}"
            export NDK_HOME="${HOME}/android-ndk-linux"
            ./scripts/circleci_unzip_android_ndk.sh android-ndk-r17b
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Need android-27 and android-28 to run the tests, install them. 
          command: |
            export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
            echo 'y' |sdkmanager --install "platforms;android-27"
            echo 'y' |sdkmanager --install "platforms;android-28"
      - run:
          name: Run Android NDK 17 Tests
          command: |
            export NDK_HOME="${HOME}/android-ndk-linux"
            export ANDROID_HOME="${ANDROID_SDK}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=$BUCK_NUM_THREADS //test/com/facebook/buck/android/...
            ${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... --filter '.*[Ii]ntegration.*'
          no_output_timeout: 20m

  linux_test_android_ndk_18:
    environment:
      <<: *linux_environment
    working_directory: "/home/circleci/buck"
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          name: Install Android NDK 18
          command: |
            cd "${BUCKROOT}"
            export NDK_HOME="${HOME}/android-ndk-linux"
            ./scripts/circleci_unzip_android_ndk.sh android-ndk-r18b
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Android NDK 18 Tests
          command: |
            export NDK_HOME="${HOME}/android-ndk-linux"
            export ANDROID_HOME="${ANDROID_SDK}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=$BUCK_NUM_THREADS //test/com/facebook/buck/android/...
            ${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... --filter '.*[Ii]ntegration.*'

  mac_build_openjdk8:
    environment:
      <<: *macos_environment
    working_directory: "/Users/distiller/buck"
    macos:
      xcode: "11.3.1"
    steps:
      # Steps run sequentially in separate shells
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Build Tests
          command: |
            cd "${BUCKROOT}"
            export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
            export PATH="$(pyenv root)/shims:${PATH}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=${BUCK_NUM_THREADS} src/... test/...

  macos_unit_groovy:
    environment:
      <<: *macos_environment
    working_directory: "/Users/distiller/buck"
    macos:
      xcode: "11.3.1"
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          <<: *install_groovy
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Unit Tests
          command: |
            cd "${BUCKROOT}"
            export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
            export PATH="$(pyenv root)/shims:${PATH}"
            export GROOVY_HOME="$HOME/.sdkman/candidates/groovy/current"
            set -eux
            ${BUCK_PEX_LOCATION} test --num-threads=${BUCK_NUM_THREADS} --all --test-selectors '!.*[Ii]ntegration.*'

  macos_build_ant:
    environment:
      <<: *macos_environment
    working_directory: "/Users/distiller/buck"
    macos:
      xcode: "11.3.1"
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Ant Tests
          command: |
            cd "${BUCKROOT}"
            export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
            export ANDROID_HOME="${ANDROID_SDK}"
            export PATH="/usr/local/opt/ant@1.9/bin:${PATH}"
            set -eux
            ant circleci
            ./scripts/circleci_test_java_file_format

  macos_test_integration:
    environment:
      <<: *macos_environment
    working_directory: "/Users/distiller/buck"
    macos:
      # The tests do not support xcode 11.x.x yet.
      xcode: "10.3.0"
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          <<: *install_ghc
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *install_groovy
      - run:
          # There is an issue with python in macos 10.14.x. this step is a work around and should be removed later.
          # https://stackoverflow.com/questions/59269208/errorrootcode-for-hash-md5-was-not-found-not-able-to-use-any-hg-mercurial-co
          name: Reinstall Python2
          command: |
            brew reinstall https://raw.githubusercontent.com/Homebrew/homebrew-core/86a44a0a552c673a05f11018459c9f5faae3becc/Formula/python@2.rb
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Integration Tests
          command: |
            cd "${BUCKROOT}"
            export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
            export PATH="$(pyenv root)/shims:${PATH}"
            export GROOVY_HOME="$HOME/.sdkman/candidates/groovy/current"
            export JAVA_HOME=`/usr/libexec/java_home`
            export PATH="${JAVA_HOME}/bin:${PATH}"
            set -ex
            # Should run this:
            #${BUCK_PEX_LOCATION} test --num-threads=$BUCK_NUM_THREADS --all --filter '^(?!(com.facebook.buck.android|com.facebook.buck.jvm.java)).*[Ii]ntegration.*'
            # But there are some test failures, exclude them for now and fix them later.
            ${BUCK_PEX_LOCATION} test --num-threads=$BUCK_NUM_THREADS --all --filter '^(?!(com.facebook.buck.android|com.facebook.buck.jvm.java|com.facebook.buck.features.haskell.HaskellBinary|com.facebook.buck.swift.SwiftTestIO|com.facebook.buck.apple.AppleTest)).*[Ii]ntegration.*'

  macos_test_heavy_integration:
    environment:
      <<: *macos_environment
    working_directory: "/Users/distiller/buck"
    macos:
      xcode: "11.3.1"
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          name: Install Android NDK
          command: |
            cd "${BUCKROOT}"
            export NDK_HOME="${HOME}/android-ndk-${PLATFORM}"
            ./scripts/circleci_install_android_ndk.sh "${PLATFORM}"
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Heavy Integration Tests
          command: |
            export NDK_HOME="${HOME}/android-ndk-${PLATFORM}"
            export ANDROID_HOME="${ANDROID_SDK}"
            export JAVA_HOME=`/usr/libexec/java_home`
            export PATH="${JAVA_HOME}/bin:${PATH}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=$BUCK_NUM_THREADS //test/com/facebook/buck/android/... //test/com/facebook/buck/jvm/java/...
            ${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... //test/com/facebook/buck/jvm/java/... --filter '.*[Ii]ntegration.*'

  macos_test_android_ndk_15:
    environment:
      <<: *macos_environment
    working_directory: "/Users/distiller/buck"
    macos:
      xcode: "11.3.1"
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          name: Install Android NDK 15
          command: |
            cd "${BUCKROOT}"
            export NDK_HOME="${HOME}/android-ndk-${PLATFORM}"
            ./scripts/circleci_unzip_android_ndk.sh android-ndk-r15c "${PLATFORM}"
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Android NDK 15 Tests
          command: |
            export NDK_HOME="${HOME}/android-ndk-${PLATFORM}"
            export ANDROID_HOME="${ANDROID_SDK}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=$BUCK_NUM_THREADS //test/com/facebook/buck/android/...
            ${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... --filter '.*[Ii]ntegration.*'

  macos_test_android_ndk_16:
    environment:
      <<: *macos_environment
    working_directory: "/Users/distiller/buck"
    macos:
      xcode: "11.3.1"
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          name: Install Android NDK 16
          command: |
            cd ${BUCKROOT}
            export NDK_HOME="${HOME}/android-ndk-${PLATFORM}"
            ./scripts/circleci_unzip_android_ndk.sh android-ndk-r16b "${PLATFORM}"
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Android NDK 16 Tests
          command: |
            export NDK_HOME="${HOME}/android-ndk-${PLATFORM}"
            export ANDROID_HOME="${ANDROID_SDK}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=$BUCK_NUM_THREADS //test/com/facebook/buck/android/...
            ${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... --filter '.*[Ii]ntegration.*'

  macos_test_android_ndk_17:
    environment:
      <<: *macos_environment
    working_directory: "/Users/distiller/buck"
    macos:
      xcode: "11.3.1"
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          name: Install Android NDK 17
          command: |
            cd ${BUCKROOT}
            export NDK_HOME="${HOME}/android-ndk-${PLATFORM}"
            ./scripts/circleci_unzip_android_ndk.sh android-ndk-r17b "${PLATFORM}"
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Need android-27 and android-28 to run the tests, install them.
          command: |
            export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
            echo 'y' |sdkmanager --install "platforms;android-27"
            echo 'y' |sdkmanager --install "platforms;android-28"
      - run:
          name: Run Android NDK 17 Tests
          command: |
            export NDK_HOME="${HOME}/android-ndk-${PLATFORM}"
            export ANDROID_HOME="${ANDROID_SDK}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=$BUCK_NUM_THREADS //test/com/facebook/buck/android/...
            # Exclude some long running tests, otherwise CircleCI will timeout after 5 hours.
            #${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... --filter '.*[Ii]ntegration.*'
            ${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... --filter '^(?!(com.facebook.buck.android.AndroidExopackageBinary)).*[Ii]ntegration.*'

          # There are tests that take too long to complete.
          no_output_timeout: 5h

  macos_test_android_ndk_18:
    environment:
      <<: *macos_environment
    working_directory: "/Users/distiller/buck"
    macos:
      xcode: "11.3.1"
    steps:
      - checkout
      - run:
          <<: *install_openjdk8
      - run:
          <<: *install_android_sdk
      - run:
          name: Install Android NDK 18
          command: |
            cd "${BUCKROOT}"
            export NDK_HOME="${HOME}/android-ndk-${PLATFORM}"
            ./scripts/circleci_unzip_android_ndk.sh android-ndk-r18b "${PLATFORM}"
      - run:
          <<: *install_golang
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - run:
          <<: *run_buck_build
      - run:
          name: Run Android NDK 18 Tests
          command: |
            export NDK_HOME="${HOME}/android-ndk-${PLATFORM}"
            export ANDROID_HOME="${ANDROID_SDK}"
            set -eux
            ${BUCK_PEX_LOCATION} build --num-threads=$BUCK_NUM_THREADS //test/com/facebook/buck/android/...
            ${BUCK_PEX_LOCATION} test --num-threads=1 //test/com/facebook/buck/android/... --filter '.*[Ii]ntegration.*'
  windows_build_test:
    environment:
      <<: *windows_environment
    working_directory: "C:\\Users\\circleci\\buck"
    executor: win/default
    steps:
      - checkout
      - run:
          name: Install ant
          command: choco install ant --version=1.9.7
          shell: cmd.exe
      - run:
          name: Install OpenJDK8
          command: choco install adoptopenjdk8
          shell: cmd.exe
      - run:
          name: Ant build
          command: cd %BUCKROOT% && refreshenv && ant
          shell: cmd.exe
      - run:
          name: Buck build
          command: cd %BUCKROOT% && refreshenv && bin\buck build buck -c python.interpreter=python
          shell: cmd.exe
      # We know there are some Windows test failures, comment out for now. They should be fixed.
      #- run:
      #    name: Run Windows tests
      #    command: |
      #      cd %BUCKROOT%
      #      bin\buck test --all --test-selectors=:windows_failures.txt --test-selectors=:windows_cxx_support.txt
      #    shell: cmd.exe

workflows:
  version: 2.1
  linux_jobs:
    # jobs run in parallel
    jobs:
      - linux_build_openjdk8
      - linux_unit_groovy
      - linux_build_ant
      - linux_test_integration
      - linux_test_heavy_integration
      - linux_test_android_ndk_15
      - linux_test_android_ndk_16
      - linux_test_android_ndk_17
      - linux_test_android_ndk_18

  macos_jobs:
    jobs:
      - mac_build_openjdk8
      - macos_unit_groovy
      - macos_build_ant
      - macos_test_integration
      - macos_test_heavy_integration
      - macos_test_android_ndk_15
      - macos_test_android_ndk_16
      - macos_test_android_ndk_17
      - macos_test_android_ndk_18

  windows_jobs:
    jobs:
      - windows_build_test
